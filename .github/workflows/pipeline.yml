name: benzotti.me

on:
  release:
    types: [created]

env:
  IMAGE_NAME: benzotti-website
  CONTAINER_NAME: benzotti-website

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Deploy to Host 
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} .
          docker build -t ${{ env.IMAGE_NAME }}:latest .

      - name: Save Docker image
        run: |
          docker save ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} | gzip > benzotti-${{ github.event.release.tag_name }}.tar.gz

      - name: Deploy to Host 
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "benzotti-${{ github.event.release.tag_name }}.tar.gz"
          target: "/mnt/cache/appdata"

      - name: Deploy and start container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /mnt/cache/appdata
            docker load < benzotti-${{ github.event.release.tag_name }}.tar.gz

            docker stop ${{ env.CONTAINER_NAME }} || true
            docker rm ${{ env.CONTAINER_NAME }} || true

            docker run -d \
              --name ${{ env.CONTAINER_NAME }} \
              --restart unless-stopped \
              -p 3000:80 \
              ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}

            rm -f benzotti-${{ github.event.release.tag_name }}.tar.gz

            sleep 5
            if docker ps | grep -q ${{ env.CONTAINER_NAME }}; then
              echo "Deployment successful - Container running with tag ${{ github.event.release.tag_name }}"
            else
              echo "Deployment failed - Container not running"
              exit 1
            fi
